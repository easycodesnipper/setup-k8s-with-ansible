- name: Check if mirror is set if use mirror
  fail:
    msg: "mirror is required since use_mirror is true"
  when: 
    - use_mirror
    - mirror is not defined
  changed_when: false

- name: Gather facts only for package_facts
  setup:
    gather_subset: ['!all', '!facter']  # Exclude all subsets except 'facter'

- name: Read os family from /etc/os-release
  shell: |
    . /etc/os-release; echo $ID_LIKE
  args:
    executable: /bin/bash
  register: os_family_rs
  changed_when: false

- name: Get hostname
  shell: |
    hostname -s
  args:
    executable: /bin/bash
  register: hostname_rs
  changed_when: false

- name: Set facts
  set_fact:
    os_family: "{{ os_family_rs.stdout }}"
    hostname: "{{ hostname_rs.stdout }}"

- name: Check if hostname matches RFC 1178
  fail:
    msg: "The hostname {{ hostname_rs }} does not match RFC 1178."
  when: hostname is not match(rfc1178_regex)

- block:
  - name: Cleanup Docker repo if use mirror
    file:
      path: "{{ '/etc/apt/sources.list.d/docker.list' if (os_family == 'debian') else '/etc/yum.repos.d/docker-ce.repo' }}"
      state: absent
    ignore_errors: yes

  - name: Cleanup Kubernetes repo if use mirror
    file:
      path: "{{ '/etc/apt/sources.list.d/kubernetes.list' if (os_family == 'debian') else '/etc/yum.repos.d/kubernetes.repo' }}"
      state: absent
    ignore_errors: yes
  when: use_mirror and mirror is defined

- name: Update package cache
  command: "{{ 'apt update -y' if ansible_facts.pkg_mgr == 'apt' else 'yum updateinfo -y' }}"
  register: apt_update_rs
  until: apt_update_rs is success
  retries: 3
  delay: 15

- block:
  - name: Check SELinux status
    shell: getenforce
    register: selinux_rs

  - block:
    - name: Update SELinux configuration file
      lineinfile:
        path: /etc/selinux/config
        regexp: '^SELINUX='
        line: 'SELINUX=disabled'
        state: present

    - name: Reboot the system
      reboot:
        reboot_timeout: 300
        msg: "Reboot initiated by Ansible to apply SELinux changes."

    - name: Wait for the system to start
      wait_for_connection:
        timeout: 600
        sleep: 10
        delay: 5
        connect_timeout: 5
      delegate_to: localhost
    when: selinux_rs.stdout == 'Enforcing'
  when: os_family  == "rhel fedora"
